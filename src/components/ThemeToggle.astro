---
// libraries
import { Icon } from "astro-icon";
---

<button
  class="theme-toggle"
  id="themeToggle"
  title="Toggles light & dark"
  aria-label="auto"
  aria-live="polite"
>
  <span class="moon"><Icon name="icon-moon" width="28" /></span>
  <span class="sun"><Icon name="icon-sun" width="28" /></span>
</button>

<script>
  if (
    window.matchMedia("(prefers-color-scheme: dark)").matches &&
    !localStorage.getItem("myColorScheme")
  ) {
    document.documentElement.className = "dark";
  } else {
    document.documentElement.className = "light";
  }

  const themeToggle = document.getElementById("themeToggle");

  themeToggle.addEventListener("click", () => {
    let activeTheme = localStorage.getItem("myColorScheme");
    if (activeTheme === "light") {
      let theme = document.documentElement.className;
      setTheme("dark");
    } else {
      let theme = document.documentElement.className;
      setTheme("light");
    }
  });

  function setTheme(theme: string) {
    document.documentElement.className = theme;
    localStorage.setItem("myColorScheme", theme);
  }

  window.onload = function () {
    if (localStorage.getItem("myColorScheme")) {
      setTheme(localStorage.getItem("myColorScheme"));
    } else {
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        setTheme(localStorage.getItem("dark"));
      } else {
        setTheme(localStorage.getItem("light"));
      }
    }
  };
</script>

<style lang="scss" is:global>
  .theme-toggle {
    --size: 2rem;
    display: grid;
    place-items: center;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    background: none;
    border: 0.125rem solid currentColor;
    padding: 0.375rem;
    inline-size: var(--size);
    block-size: var(--size);
    aspect-ratio: 1;
    border-radius: 50%;
    box-shadow: none;
    cursor: pointer;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
    outline-offset: 5px;

    > span {
      grid-column: 1 / -1;
      grid-row: 1 / -1;
      rotate: -10deg;
      transition: 300ms ease-in-out;

      > svg {
        inline-size: 100%;
        block-size: 100%;
      }
    }

    .sun {
      transform: rotateY(180deg);
      opacity: 0;
    }

    .moon {
      transform: rotateY(0deg);
      opacity: 1;
    }
  }
  .dark {
    .sun {
      transform: rotateY(0deg);
      opacity: 1;
    }

    .moon {
      transform: rotateY(180deg);
      opacity: 0;
    }
  }
</style>
